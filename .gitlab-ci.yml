variables:
  GRAFANA_VERSION: "11.4"
  PLUGINS_DIR: "grafana-plugins"
  GRAFANA_API_URL: "https://grafana.com/api/plugins"

stages:
  - discover
  - download
  - commit

discover_plugins:
  stage: discover
  image: python:3.11-slim
  script:
    - apt-get update && apt-get install -y curl jq
    - |
      curl -s "$GRAFANA_API_URL" | jq -r '.items[] | .slug' > plugins.txt
    - |
      echo "Found $(wc -l < plugins.txt) plugins"
  artifacts:
    paths:
      - plugins.txt
    expire_in: 1 day

download_plugins:
  stage: download
  image: python:3.11-slim
  script:
    - apt-get update && apt-get install -y curl zip
    - mkdir -p $PLUGINS_DIR
    - |
      while IFS= read -r plugin; do
        echo "Downloading plugin: $plugin"
        plugin_url="$GRAFANA_API_URL/$plugin/versions/latest/download"
        curl -L -o "$PLUGINS_DIR/$plugin.zip" "$plugin_url" || echo "Failed to download $plugin"
      done < plugins.txt
  artifacts:
    paths:
      - $PLUGINS_DIR/
    expire_in: 1 day
  needs:
    - discover_plugins

commit_plugins:
  stage: commit
  image: alpine:latest
  before_script:
    - apk add --no-cache git
    - git config --global user.email "pipeline@example.com"
    - git config --global user.name "GitLab Pipeline"
  script:
    - |
      if [ -n "$(git status --porcelain)" ]; then
        git add $PLUGINS_DIR/
        git commit -m "Update Grafana plugins [skip ci]"
        git push origin HEAD:$CI_COMMIT_REF_NAME
      else
        echo "No changes to commit"
      fi
  needs:
    - download_plugins